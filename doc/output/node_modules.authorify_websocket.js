Ext.data.JsonP.node_modules_authorify_websocket({"mixedInto":[],"subclasses":[],"requires":[],"parentMixins":[],"author":[{"tagname":"author","name":"Marcello Gesmundo","email":null}],"autodetected":{},"uses":[],"superclasses":[],"alternateClassNames":[],"return":{"type":"Object","html_type":"Object","properties":null,"name":"return","doc":"<p>The plugin module</p>\n"},"params":[{"type":"Object","html_type":"Object","tagname":"params","name":"app","doc":"<p>The namaspace of the host application</p>\n"},{"type":"Object","html_type":"Object","tagname":"params","name":"plugin","doc":"<p>The plugin namespace</p>\n"},{"type":"Object","html_type":"Object","tagname":"params","name":"options","doc":"<p>The plugin config options</p>\n"}],"members":[{"owner":"node_modules.authorify_websocket","tagname":"cfg","meta":{},"name":"primusOptions","id":"cfg-primusOptions"},{"owner":"node_modules.authorify_websocket","tagname":"cfg","meta":{},"name":"transports","id":"cfg-transports"},{"owner":"node_modules.authorify_websocket","tagname":"method","meta":{},"name":"createServer","id":"method-createServer"},{"owner":"node_modules.authorify_websocket","tagname":"method","meta":{},"name":"destroyServer","id":"method-destroyServer"}],"tagname":"class","mixins":[],"short_doc":"A plugin for Authorify that enable websockets. ...","private":null,"meta":{},"name":"node_modules.authorify_websocket","extends":null,"component":false,"id":"class-node_modules.authorify_websocket","html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/main.html#node_modules-authorify_websocket' target='_blank'>main.js</a></div><div class='dependency'><a href='source/wsserver.html#node_modules-authorify_websocket' target='_blank'>wsserver.js</a></div></pre><div class='doc-contents'><p>A plugin for <a href=\"https://www.npmjs.org/package/authorify\">Authorify</a> that enable websockets. A provided router allow to use both http and websockets like a REST server. When the plugin is loaded it is available under the main namespace of the host application: app.plugin['your short plugin name'].</p>\n\n<h2>Example</h2>\n\n<h3>Server</h3>\n\n<pre><code>var restify = require('restify');\nvar authorify = require('authorify')({\n  //... options\n});\n// create the http server\nvar server = restify.createServer();\n// add plugin to the server\nauthorify.load('authorify-websocket', 'ws', {\n  transports: ['ws', 'http'],\n  requestTimeout: 200\n});\n// get the loaded plugin\nvar ws = authorify.plugin.ws;\n// create the websocket server\nws.createServer(server);\nvar router = ws.router;\n// add routes\nrouter.get('/handshake', ok);\nrouter.get('/auth', ok);\nrouter.get('/logout', ok);\nrouter.post('/test', ok);\n// start the server\nserver.listen(3000);\n</code></pre>\n\n<h3>Client (Node)</h3>\n\n<pre><code> // create the client\n var client = require('authorify-client')({\n   //... options\n });\n // add plugin to the client\n client.load('authorify-websocket', 'ws', {\n   transports: ['ws', 'http'],\n   requestTimeout: 200\n });\n</code></pre>\n\n<h3>Client (browser)</h3>\n\n<pre><code> // index.js\n var client = authorify;   // authorify is a global exposed by authorify-client\n // configure the client\n client.setConfig({\n   //... options\n });\n // load plugin\n client.load('authorify-websocket', 'ws', {\n   transports: ['ws', 'http'],\n   requestTimeout: 200\n });\n // request a resource\n var message = { field1: 'value1', field2: 'value2' };\n client.post('/test')\n   .send(message)\n    .end(function(err, res) {\n       // the reply here or err only if request is over timeout\n   });\n\n // index.html\n &lt;html&gt;\n   &lt;body&gt;\n     &lt;script src=\"authorify.js\"&gt;&lt;/script&gt;     // this is the browser version of [Authorify-Client][https://www.npmjs.org/package/authorify-client]\n     &lt;script src=\"authorify-websocket.js\"&gt;&lt;/script&gt;\n     &lt;script src=\"index.js\"&gt;&lt;/script&gt;\n   &lt;/body&gt;\n &lt;/html&gt;\n</code></pre>\n\n<h1>License</h1>\n\n<p>Copyright (c) 2012-2014 Yoovant by Marcello Gesmundo. All rights reserved.</p>\n\n<p>This program is released under a GNU Affero General Public License version 3 or above, which in summary means:</p>\n\n<ul>\n<li>You <strong>can use</strong> this program for <strong>no cost</strong>.</li>\n<li>You <strong>can use</strong> this program for <strong>both personal and commercial reasons</strong>.</li>\n<li>You <strong>do not have to share your own program's code</strong> which uses this program.</li>\n<li>You <strong>have to share modifications</strong> (e.g bug-fixes) you've made to this program.</li>\n</ul>\n\n\n<p>For more convoluted language, see the LICENSE file.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>app</span> : Object<div class='sub-desc'><p>The namaspace of the host application</p>\n</div></li><li><span class='pre'>plugin</span> : Object<div class='sub-desc'><p>The plugin namespace</p>\n</div></li><li><span class='pre'>options</span> : Object<div class='sub-desc'><p>The plugin config options</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The plugin module</p>\n</div></li></ul></div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-primusOptions' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='node_modules.authorify_websocket'>node_modules.authorify_websocket</span><br/><a href='source/main.html#node_modules-authorify_websocket-cfg-primusOptions' target='_blank' class='view-source'>view source</a></div><a href='#!/api/node_modules.authorify_websocket-cfg-primusOptions' class='name expandable'>primusOptions</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>The options for Primus\nSee Primus documentation for a detailed explanation. ...</div><div class='long'><p>The options for Primus\nSee <a href=\"https://github.com/primus/primus\">Primus documentation</a> for a detailed explanation.</p>\n<p>Defaults to: <code>{transformer: 'websockets', parser: 'JSON', strategy: ['online', 'disconnect'], methods: ['GET', 'HEAD', 'PUT', 'POST', 'PATCH', 'DELETE', 'OPTIONS'], credentials: false}</code></p></div></div></div><div id='cfg-transports' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='node_modules.authorify_websocket'>node_modules.authorify_websocket</span><br/><a href='source/main.html#node_modules-authorify_websocket-cfg-transports' target='_blank' class='view-source'>view source</a></div><a href='#!/api/node_modules.authorify_websocket-cfg-transports' class='name expandable'>transports</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The enabled transport protocols. ...</div><div class='long'><p>The enabled transport protocols. When a request is made, is used the first protocol and if it fails, it uses the second one.</p>\n<p>Defaults to: <code>['ws', 'http']</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-createServer' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='node_modules.authorify_websocket'>node_modules.authorify_websocket</span><br/><a href='source/wsserver.html#node_modules-authorify_websocket-method-createServer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/node_modules.authorify_websocket-method-createServer' class='name expandable'>createServer</a>( <span class='pre'>[http]</span> ) : Primus<span class=\"signature\"></span></div><div class='description'><div class='short'>Create a new websocket server. ...</div><div class='long'><p>Create a new websocket server.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>http</span> : http (optional)<div class='sub-desc'><p>An optional http server to use with websockets.\nIf it is not provided a new http server is created and attached.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Primus</span><div class='sub-desc'><p>The new server that is a Primus instance.</p>\n</div></li></ul></div></div></div><div id='method-destroyServer' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='node_modules.authorify_websocket'>node_modules.authorify_websocket</span><br/><a href='source/wsserver.html#node_modules-authorify_websocket-method-destroyServer' target='_blank' class='view-source'>view source</a></div><a href='#!/api/node_modules.authorify_websocket-method-destroyServer' class='name expandable'>destroyServer</a>( <span class='pre'>opts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Destroy the active websocket server. ...</div><div class='long'><p>Destroy the active websocket server.\n<strong>NOTE</strong>: the http server is not destroyed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>opts</span> : Object<div class='sub-desc'><p>The Primus option for destroying.\nSee <a href=\"https://github.com/primus/primus\">Primus documentation</a> for a detailed explanation.</p>\n</div></li></ul></div></div></div></div></div></div></div>","aliases":{},"files":[{"href":"main.html#node_modules-authorify_websocket","filename":"main.js"},{"href":"wsserver.html#node_modules-authorify_websocket","filename":"wsserver.js"}],"singleton":null});