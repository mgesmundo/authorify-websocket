Ext.data.JsonP.node_modules_authorify_websocket_router({"mixedInto":[],"subclasses":[],"requires":[],"parentMixins":[],"author":[{"tagname":"author","name":"Marcello Gesmundo","email":null}],"autodetected":{},"uses":[],"superclasses":[],"alternateClassNames":[],"mixins":[],"members":[{"owner":"node_modules.authorify_websocket.router","tagname":"property","meta":{"readonly":true},"name":"reverseRoutes","id":"property-reverseRoutes"},{"owner":"node_modules.authorify_websocket.router","tagname":"property","meta":{"readonly":true},"name":"routes","id":"property-routes"},{"owner":"node_modules.authorify_websocket.router","tagname":"method","meta":{},"name":"add","id":"method-add"},{"owner":"node_modules.authorify_websocket.router","tagname":"method","meta":{},"name":"all","id":"method-all"},{"owner":"node_modules.authorify_websocket.router","tagname":"method","meta":{},"name":"attach","id":"method-attach"},{"owner":"node_modules.authorify_websocket.router","tagname":"method","meta":{},"name":"find","id":"method-find"},{"owner":"node_modules.authorify_websocket.router","tagname":"method","meta":{},"name":"findAndRun","id":"method-findAndRun"},{"owner":"node_modules.authorify_websocket.router","tagname":"method","meta":{},"name":"run","id":"method-run"}],"tagname":"class","short_doc":"The router for the routes management. ...","meta":{},"name":"node_modules.authorify_websocket.router","component":false,"id":"class-node_modules.authorify_websocket.router","html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/router.html#node_modules-authorify_websocket-router' target='_blank'>router.js</a></div></pre><div class='doc-contents'><p>The router for the routes management. All routes can be versioned like <a href=\"http://mcavage.me/node-restify\">restify</a> does.</p>\n\n<h2>Example</h2>\n\n<pre><code>   var router = require('authorify')({\n     // add your config options\n   }).router;\n   var ok = function(req, res, next) {\n     // your logic\n     next();\n   };\n   // add a route with a param ('user')\n   router.add('GET', '/root/user/:user', ok);\n   // add a versioned route\n   router.get({ path: '/root/versioned', version: '~1.5.0' }, ok);\n</code></pre>\n\n<h1>License</h1>\n\n<p>Copyright (c) 2012-2014 Yoovant by Marcello Gesmundo. All rights reserved.</p>\n\n<p>This program is released under a GNU Affero General Public License version 3 or above, which in summary means:</p>\n\n<ul>\n<li>You <strong>can use</strong> this program for <strong>no cost</strong>.</li>\n<li>You <strong>can use</strong> this program for <strong>both personal and commercial reasons</strong>.</li>\n<li>You <strong>do not have to share your own program's code</strong> which uses this program.</li>\n<li>You <strong>have to share modifications</strong> (e.g bug-fixes) you've made to this program.</li>\n</ul>\n\n\n<p>For more convoluted language, see the LICENSE file.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-reverseRoutes' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='node_modules.authorify_websocket.router'>node_modules.authorify_websocket.router</span><br/><a href='source/router.html#node_modules-authorify_websocket-router-property-reverseRoutes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/node_modules.authorify_websocket.router-property-reverseRoutes' class='name expandable'>reverseRoutes</a> : Object<span class=\"signature\"><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'>All reversed routes ...</div><div class='long'><p>All reversed routes</p>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-routes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='node_modules.authorify_websocket.router'>node_modules.authorify_websocket.router</span><br/><a href='source/router.html#node_modules-authorify_websocket-router-property-routes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/node_modules.authorify_websocket.router-property-routes' class='name expandable'>routes</a> : Object<span class=\"signature\"><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'>All routes ...</div><div class='long'><p>All routes</p>\n<p>Defaults to: <code>{}</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-add' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='node_modules.authorify_websocket.router'>node_modules.authorify_websocket.router</span><br/><a href='source/router.html#node_modules-authorify_websocket-router-method-add' target='_blank' class='view-source'>view source</a></div><a href='#!/api/node_modules.authorify_websocket.router-method-add' class='name expandable'>add</a>( <span class='pre'>method, path, callback</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Add a new route for the request path and method. ...</div><div class='long'><p>Add a new route for the request path and method. You can add route using this method or (preferably)\nusing the specific method (for the required verb) or <code>all</code> method to add all available verbs for a path.\nFor every route you can specify more than one handler as a function with the\nknown signature <code>function (req, res, next)</code>.\nThe route can be versioned using an object with path and version properties instead a string path\n(like <a href=\"http://mcavage.me/node-restify\">restify</a> does).</p>\n\n<h2>Example</h2>\n\n<pre><code>   var router = require('authorify')({\n     // add your config options\n   }).router;\n   var first = function(req, res, next) {\n     // your logic\n     next();\n   };\n   var second = function(req, res, next) {\n     // your logic\n     next();\n   };\n   // add a route with a parameter ('user')\n   router.add('GET', '/root/user/:user', first, second);\n   // you can use a public method instead the above private method\n   router.get('/root/user/:user', first, second);\n   // failure adding a route with an optional parameter ('user') because this route is ambiguous with the previous\n   router.get('/root/user/:user?', first, second);\n   // add a versioned route\n   router.get({ path: '/root/versioned', version: '~1.5.0' }, first, second);\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>method</span> : String<div class='sub-desc'><p>The method request for the route</p>\n</div></li><li><span class='pre'>path</span> : String/Object<div class='sub-desc'><p>The path of the route</p>\n<ul><li><span class='pre'>path</span> : String<div class='sub-desc'><p>The path of the versioned route</p>\n</div></li><li><span class='pre'>version</span> : String<div class='sub-desc'><p>The version of the route according (see <a href=\"https://www.npmjs.org/package/semver\">Semantic Versioning</a>')</p>\n</div></li></ul></div></li><li><span class='pre'>callback</span> : Function...<div class='sub-desc'><p>The route handler(s): callback (req, res, next)</p>\n<ul><li><span class='pre'>req</span> : Object<div class='sub-desc'><p>The request</p>\n</div></li><li><span class='pre'>res</span> : Object<div class='sub-desc'><p>The response</p>\n</div></li><li><span class='pre'>next</span> : Function<div class='sub-desc'><p>The function to execute to go to next handler: next(err)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>err</span> : Error<div class='sub-desc'><p>The error instance if occurred\n<strong>If the handler calls next(err) the handlers chain ends. If the next handler is missing, the handlers chain ends.</strong></p>\n</div></li></ul></div></li></ul></div></li></ul></div></div></div><div id='method-all' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='node_modules.authorify_websocket.router'>node_modules.authorify_websocket.router</span><br/><a href='source/router.html#node_modules-authorify_websocket-router-method-all' target='_blank' class='view-source'>view source</a></div><a href='#!/api/node_modules.authorify_websocket.router-method-all' class='name expandable'>all</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Add a route for all methods (all available verbs) ...</div><div class='long'><p>Add a route for all methods (all available verbs)</p>\n</div></div></div><div id='method-attach' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='node_modules.authorify_websocket.router'>node_modules.authorify_websocket.router</span><br/><a href='source/router.html#node_modules-authorify_websocket-router-method-attach' target='_blank' class='view-source'>view source</a></div><a href='#!/api/node_modules.authorify_websocket.router-method-attach' class='name expandable'>attach</a>( <span class='pre'>server</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Attach all routes to the server instance. ...</div><div class='long'><p>Attach all routes to the server instance.\nYou <strong>MUST</strong> attach the server to the router <strong>before</strong> add the routes. You <strong>MUST</strong>\nadd all routes <strong>only</strong> on the router and they can be added automatically to the server.\nThe server <strong>MUST</strong> manage route in the restify format. Use restify! :-)</p>\n\n<h2>Example</h2>\n\n<pre><code> // example of routes inside the router\n\n { GET:\n    { '*': { '/versioned':\n      { name: '/versioned',\n         version: '*',\n         keys: [],\n         regexp: /^\\/versioned$/i,\n         handlers: [ function (req, res, next) { next(); } ] } },\n      '1.5.5': { '/versioned': [Object] },\n      '1.2.3': { '/versioned': [Object] },\n      '2.0.0': { '/versioned': [Object] },\n      '0.5.2': { '/versioned': [Object] } } }\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>server</span> : Object<div class='sub-desc'><p>The server instance</p>\n</div></li></ul></div></div></div><div id='method-find' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='node_modules.authorify_websocket.router'>node_modules.authorify_websocket.router</span><br/><a href='source/router.html#node_modules-authorify_websocket-router-method-find' target='_blank' class='view-source'>view source</a></div><a href='#!/api/node_modules.authorify_websocket.router-method-find' class='name expandable'>find</a>( <span class='pre'>req, res, next</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Find a route for the request path and method ...</div><div class='long'><p>Find a route for the request path and method</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>req</span> : Object<div class='sub-desc'><p>The request</p>\n</div></li><li><span class='pre'>res</span> : Object<div class='sub-desc'><p>The response</p>\n</div></li><li><span class='pre'>next</span> : Function<div class='sub-desc'><p>The callback: next(err)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>err</span> : Error<div class='sub-desc'><p>The error instance if occurred</p>\n</div></li></ul></div></li></ul></div></div></div><div id='method-findAndRun' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='node_modules.authorify_websocket.router'>node_modules.authorify_websocket.router</span><br/><a href='source/router.html#node_modules-authorify_websocket-router-method-findAndRun' target='_blank' class='view-source'>view source</a></div><a href='#!/api/node_modules.authorify_websocket.router-method-findAndRun' class='name expandable'>findAndRun</a>( <span class='pre'>req, res, next</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Find a route for the request path and method and execute the available handlers chain ...</div><div class='long'><p>Find a route for the request path and method and execute the available handlers chain</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>req</span> : Object<div class='sub-desc'><p>The request</p>\n</div></li><li><span class='pre'>res</span> : Object<div class='sub-desc'><p>The response</p>\n</div></li><li><span class='pre'>next</span> : Function<div class='sub-desc'><p>The callback: next(err)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>err</span> : Error<div class='sub-desc'><p>The error instance if occurred</p>\n</div></li></ul></div></li></ul></div></div></div><div id='method-run' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='node_modules.authorify_websocket.router'>node_modules.authorify_websocket.router</span><br/><a href='source/router.html#node_modules-authorify_websocket-router-method-run' target='_blank' class='view-source'>view source</a></div><a href='#!/api/node_modules.authorify_websocket.router-method-run' class='name expandable'>run</a>( <span class='pre'>req, res, next</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Execute the handlers chain for the handled route. ...</div><div class='long'><p>Execute the handlers chain for the handled route.\nTo get the handled route use req.getRoute() method</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>req</span> : Object<div class='sub-desc'><p>The request</p>\n</div></li><li><span class='pre'>res</span> : Object<div class='sub-desc'><p>The response</p>\n</div></li><li><span class='pre'>next</span> : Function<div class='sub-desc'><p>The callback: next(err)</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>err</span> : Error<div class='sub-desc'><p>The error instance if occurred</p>\n</div></li></ul></div></li></ul></div></div></div></div></div></div></div>","aliases":{},"files":[{"href":"router.html#node_modules-authorify_websocket-router","filename":"router.js"}]});